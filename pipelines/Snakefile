from snakemake.utils import Paramspace
import pandas as pd

paramspace = Paramspace(pd.read_csv("../tests/mocks/snakemake_params.tsv", sep="\t"))

rule all:
    input:
        expand("results/statistical_testing/{params}.tsv", params=paramspace.instance_patterns)

rule generate_data:
    params:
        simulation = paramspace.instance
    output:
        f"results/simulations/{paramspace.wildcard_pattern}.tsv"
    shell:
        'simulate_data --config "{params.simulation}" --output {output}'

rule statistical_analysis:
    params:
        simulation=paramspace.instance
    input:
        data = f"results/simulations/{paramspace.wildcard_pattern}.tsv"
    output:
        f"results/statistical_testing/{paramspace.wildcard_pattern}.tsv"
    shell:
        'statistical_test --config "{params.simulation}" --dataset {input.data} --output {output}'


#  rule aggregate_results:
#     params:
#          simulation=paramspace.instance
#     input:
#         f"results/statistical_testing/{paramspace.wildcard_pattern}.tsv"
#     output:
#         f"results/statistical_testing/{paramspace.wildcard_pattern}.tsv"
#     shell:
#         'aggregate_results --input {input} --output {output} --config "{params.simulation}"
#
# def aggregate_results(input, output, config):
#     config["stats_res"] = pd.read_csv(input[0], sep="\t")[0]
#     config["stats_res"]["config"] = config["simulation"]
#     df.to_csv(output, sep="\t", index=False)

